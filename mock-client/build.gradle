ext {
    project(":mock-client") {
        dependencies {
            // Kotlin
            implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
            implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
            implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
            implementation 'org.jetbrains.kotlin:kotlin-reflect'
            implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'

            implementation "io.github.binance:binance-connector-java:3.4.0"
            implementation "com.squareup.okhttp3:okhttp:4.12.0"

            implementation "io.netty:netty-all:4.1.82.Final"
            implementation "org.springframework.boot:spring-boot-starter-webflux"
            implementation "org.springframework.boot:spring-boot-starter-actuator"
            implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:2.4.0"
            implementation "io.github.microutils:kotlin-logging-jvm:3.0.5"

            compileOnly "org.projectlombok:lombok:1.18.36"
            annotationProcessor "org.projectlombok:lombok:1.18.36"
            implementation "com.opencsv:opencsv:5.8"
            // Grpc
            implementation "com.google.protobuf:protoc:3.24.0"
            implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'

            implementation "com.salesforce.servicelibs:reactor-grpc-stub:1.2.4"
            implementation 'org.springframework.grpc:spring-grpc-core'

            // Test
            testImplementation "org.junit.jupiter:junit-jupiter"
            testImplementation "org.testng:testng:7.10.2"
        }
        dependencyManagement {
            imports {
                mavenBom "org.springframework.grpc:spring-grpc-dependencies:0.3.0-SNAPSHOT"
                mavenBom "org.junit:junit-bom:5.10.0"
            }
        }
        def reactiveGrpcVersion = '1.2.4'
        protobuf {
            protoc {
                artifact = 'com.google.protobuf:protoc'
            }
            plugins {
                grpc {
                    artifact = 'io.grpc:protoc-gen-grpc-java'
                }
                reactor {
                    artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}"
                }
            }
            generateProtoTasks {
                all()*.plugins {
                    grpc {
                        option 'jakarta_omit'
                        option '@generated=omit'
                    }
                    reactor {}
                }
            }
        }
    }
}